__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _jsxFileName = "/home/justdial/Projects/AwesomeProject/src/HomeScreen.js";

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeCamera = _require(_dependencyMap[3], "react-native-camera");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    HomeScreen: {
      displayName: "HomeScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/justdial/Projects/AwesomeProject/src/HomeScreen.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var PendingView = function PendingView() {
    return _react3.default.createElement(
      _reactNative.View,
      {
        style: {
          flex: 1,
          backgroundColor: 'lightgreen',
          justifyContent: 'center',
          alignItems: 'center'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 7
        }
      },
      _react3.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 15
          }
        },
        "Waiting"
      )
    );
  };

  var HomeScreen = _wrapComponent("HomeScreen")(function (_React$Component) {
    _inherits(HomeScreen, _React$Component);

    function HomeScreen() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, HomeScreen);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HomeScreen.__proto__ || Object.getPrototypeOf(HomeScreen)).call.apply(_ref, [this].concat(args))), _this), _this.takePicture = function _callee(camera) {
        var options, data;
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = {
                  quality: 0.5,
                  base64: true
                };
                _context.next = 3;
                return regeneratorRuntime.awrap(camera.takePictureAsync(options));

              case 3:
                data = _context.sent;

                _reactNative.CameraRoll.saveToCameraRoll(data.uri);

                console.log(data.uri);

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(HomeScreen, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.container,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          _react3.default.createElement(
            _reactNativeCamera.RNCamera,
            {
              style: styles.preview,
              type: _reactNativeCamera.RNCamera.Constants.Type.back,
              flashMode: _reactNativeCamera.RNCamera.Constants.FlashMode.on,
              permissionDialogTitle: 'Permission to use camera',
              permissionDialogMessage: 'We need your permission to use your camera phone',
              __source: {
                fileName: _jsxFileName,
                lineNumber: 23
              }
            },
            function (_ref2) {
              var camera = _ref2.camera,
                  status = _ref2.status;
              if (status !== 'READY') return _react3.default.createElement(PendingView, {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              });
              return _react3.default.createElement(
                _reactNative.View,
                {
                  style: {
                    flex: 0,
                    flexDirection: 'row',
                    justifyContent: 'center'
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 33
                  }
                },
                _react3.default.createElement(
                  _reactNative.TouchableOpacity,
                  {
                    onPress: function onPress() {
                      return _this2.takePicture(camera);
                    },
                    style: styles.capture,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 34
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.Text,
                    {
                      style: {
                        fontSize: 14
                      },
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 35
                      }
                    },
                    " SNAP "
                  )
                )
              );
            }
          )
        );
      }
    }]);

    return HomeScreen;
  }(_react3.default.Component));

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: 'black'
    },
    preview: {
      flex: 1,
      justifyContent: 'flex-end',
      alignItems: 'center'
    },
    capture: {
      flex: 0,
      backgroundColor: '#fff',
      borderRadius: 5,
      padding: 15,
      paddingHorizontal: 20,
      alignSelf: 'center',
      margin: 20
    }
  });

  exports.default = HomeScreen;
});