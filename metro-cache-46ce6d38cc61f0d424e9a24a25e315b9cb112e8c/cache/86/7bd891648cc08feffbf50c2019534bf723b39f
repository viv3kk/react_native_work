__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var React = _interopRequireWildcard(_react2);

  var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _jsxFileName = "/home/justdial/Projects/AwesomeProject/node_modules/react-navigation-tabs/dist/views/ResourceSavingScene.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    ResourceSavingScene: {
      displayName: "ResourceSavingScene"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/justdial/Projects/AwesomeProject/node_modules/react-navigation-tabs/dist/views/ResourceSavingScene.js",
    components: _components,
    locals: [module],
    imports: [React.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var FAR_FAR_AWAY = 3000;

  var ResourceSavingScene = _wrapComponent("ResourceSavingScene")(function (_React$Component) {
    _inherits(ResourceSavingScene, _React$Component);

    function ResourceSavingScene() {
      _classCallCheck(this, ResourceSavingScene);

      return _possibleConstructorReturn(this, (ResourceSavingScene.__proto__ || Object.getPrototypeOf(ResourceSavingScene)).apply(this, arguments));
    }

    _createClass(ResourceSavingScene, [{
      key: "render",
      value: function render() {
        var _props = this.props,
            isFocused = _props.isFocused,
            children = _props.children,
            style = _props.style,
            rest = _objectWithoutProperties(_props, ["isFocused", "children", "style"]);

        return React.createElement(
          _reactNative.View,
          _extends({
            style: [styles.container, style],
            collapsable: false,
            removeClippedSubviews: _reactNative.Platform.OS === 'ios' ? !isFocused : true,
            pointerEvents: isFocused ? 'auto' : 'none'
          }, rest, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 10
            }
          }),
          React.createElement(
            _reactNative.View,
            {
              style: isFocused ? styles.attached : styles.detached,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 14
              }
            },
            children
          )
        );
      }
    }]);

    return ResourceSavingScene;
  }(React.Component));

  exports.default = ResourceSavingScene;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    attached: {
      flex: 1
    },
    detached: {
      flex: 1,
      top: FAR_FAR_AWAY
    }
  });
});